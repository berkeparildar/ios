[
  {
    "projectName": "News",
    "repositoryURL": "https://github.com/berkeparildar/News",
    "projectDescription": "News is an iOS application designed to provide users with access to news articles from multiple categories and sources. The app allows users to customize their news feed by selecting preferred categories, view trending and top articles, and search for specific news stories, all within an intuitive and user-friendly interface.",
    "projectFeatures": [
      "Onboarding and Personalization: Users are greeted with an onboarding page that allows them to select news categories of interest, creating a personalized news feed tailored to their preferences.",
      "Personal Feed: The feed page displays the current date, weather information, and a list of articles grouped by the selected categories, offering a customized browsing experience.",
      "Trending and Top Articles: The second page of the app showcases trending and top articles from the last day, keeping users updated with the latest important news.",
      "Category Navigation: The third page features a horizontally scrollable list of categories and their respective articles. Users can also navigate here by tapping on category titles in their personal feed.",
      "Search Functionality: Each page includes a search button in the navigation bar, allowing users to search for articles by keywords and view results in a list format.",
      "Seamless Browsing: Implemented paging for smooth and continuous article browsing, enhancing the user experience.",
      "Custom Tab Bar: Designed a custom tab bar for easy navigation between different screens within the app.",
      "Backend Integration: Utilized the News API to fetch articles and display them in the app, ensuring users have access to up-to-date news content.",
      "Technical Stack: Developed using SwiftUI for the user interface, and followed the MVVM (Model-View-ViewModel) architectural pattern to ensure a clean and maintainable codebase."
    ],
    "projectUsage": [
      "Onboard and Personalize: Open News, complete the onboarding process by selecting your preferred news categories, and proceed to your personalized feed.",
      "Navigate the App: Use the custom tab bar to switch between your personal feed, trending and top articles, and the category page.",
      "Browse and Read Articles: Scroll through your personal feed to read articles from your chosen categories, and tap on any article to read it in detail.",
      "Search for News: Tap the search button in the navigation bar, enter keywords to find specific articles, and browse the search results.",
      "Explore Categories: Navigate to the category page to view articles grouped by category, and tap on any category title in your feed to explore more articles in that category."
    ],
    "videoURL": "https://youtu.be/wPzSTrPbEFk",
    "tags": [
      "Swift",
      "SwiftUI",
      "MVVM"
    ]
  },
  {
    "projectName": "Holler",
    "repositoryURL": "https://github.com/berkeparildar/Holler",
    "projectDescription": "Holler is an iOS social media application inspired by Twitter, where users can share their thoughts, updates, and moments with others. The app provides a platform for users to post text and photos, interact with other users through likes and replies, and follow their favorite people to see their posts in a personalized feed.",
    "projectFeatures": [
      "Tabs and Navigation: The app features three tabs—Search, Feed, and Profile—allowing users to search for other users by username, view posts from followed users, and view or edit personal profile details.",
      "Posting and Interaction: Users can create posts with text, photos, or both, and interact with posts by liking or replying.",
      "User Profiles: Users can view other users' profiles, follow or unfollow them, and see their posts, profile image, banner image, and follower information.",
      "Profile Customization: Users can edit and update their profile images and banner images, with images stored in Firebase Cloud Storage.",
      "Backend Integration: The app uses Firebase Firestore for managing user data and posts, Firebase Authentication for account creation and login, and Firebase Cloud Storage for storing images.",
      "Technical Stack: Developed using UIKit for the user interface, and following the MVVM (Model-View-ViewModel) architectural pattern to ensure a clean and maintainable codebase."
    ],
    "projectUsage": [
      "Sign Up and Log In: Open Holler, sign up with email, password, name, and username, and log in using the registered email and password.",
      "Navigate the App: Use the Search Tab to find and follow other users by typing their username, check the Feed Tab to see posts from followed users, and access the Profile Tab to view and edit personal profile information.",
      "Create and Interact with Posts: Tap the create post button on the Feed page to add text and/or a photo, tap on a post to view it in detail and see replies, and like or reply to posts to engage with other users.",
      "Manage Follows: Search for a user in the Search Tab, tap on their profile, click the follow button to see their posts in your feed, and tap the unfollow button to remove their posts from your feed.",
      "Edit Profile: Go to the Profile Tab, tap the edit button, update your profile image or banner image, and save changes to update your profile."
    ],
    "videoURL": "https://youtu.be/qzHFDbrYlcA",
    "tags": [
      "Swift",
      "UIKit",
      "MVVM",
      "Firebase"
    ]
  },
  {
    "projectName": "Market",
    "repositoryURL": "https://github.com/berkeparildar/Market",
    "projectDescription": "Market is an iOS application that transforms your device into a powerful marketplace, combining food and grocery delivery in one seamless platform.",
    "projectFeatures": [
      "Integrated Firebase Authentication, Firestore, and Storage to handle back-end operations seamlessly.",
      "Leveraged Keychain and Core Data for secure local storage of user and product data.",
      "Utilized SnapKit to implement clean and efficient auto-layouts for UI components.",
      "Designed and developed a modular networking package, ensuring maintainability and scalability.",
      "Implemented Kingfisher to display and optimize images while minimizing memory usage.",
      "Followed the VIPER architecture, ensuring maximum separation of concerns and ease of testing.",
      "Incorporated MapKit and CoreLocation to display and manage user addresses effectively."
    ],
    "projectUsage": [
      "Users can sign up or sign in using their email address.",
      "Users can update their personal information, including their email address and password, if needed.",
      "Add a new address, which will be automatically set as the current address. If multiple addresses exist, users can select their preferred address from a list.",
      "Explore the classic market experience by browsing products by category, adding items to the cart, and tapping on them to view details. Once items are in the cart, suggested products will appear for additional selection.",
      "Browse food and dishes by category or restaurant, view menus organized into different groups, check restaurant details, and personalize orders with various customization options."
    ],
    "videoURL": "https://youtu.be/MkUJI9T0r7U&t=2s",
    "tags": [
      "Swift",
      "UIKit",
      "VIPER",
      "Firebase"
    ]
  },
  {
    "projectName": "Weather",
    "repositoryURL": "https://github.com/berkeparildar/Weather",
    "projectDescription": "Weather is an iOS application for instantly checking current weather conditions and forecasts for any location you desire. Weather delivers accurate and up-to-date weather data along with a user-friendly interface.",
    "projectFeatures": [
      "Current Weather and Forecasts: Access real-time weather information including temperature, weather projectDescription, local time, and daily/hourly forecasts for any location worldwide.",
      "OpenWeatherMap API Integration: Utilizes the OpenWeatherMap API to gather current and forecasted weather data, ensuring reliability and precision.",
      "Location Search: Easily find and add locations using the integrated search bar. The app utilizes MKSearch to retrieve location names and coordinates based on user input.",
      "Home Screen: Added locations are displayed on the home screen as tiles, each showcasing the current weather temperature, location name, local time, weather projectDescription, highest, and lowest temperatures.",
      "Detailed Weather Information: Tap on a location tile to delve deeper into its weather forecast. View hourly forecasts, a 5-day outlook with high and low temperatures, and weather projectDescriptions accompanied by weather icons.",
      "Dynamic Backgrounds: Each location's tile features a custom image background that dynamically changes based on the local time (day or night) of that location.",
      "Persistent Storage with Core Data: The app utilizes Core Data to save added locations. This means that once a location is added, it is stored locally, allowing users to access their preferred locations without the need to add them repeatedly. Users can remove stored locations any time they want from the Home Screen."
    ],
    "projectUsage": [
      "Add Locations: Use the search bar in the navigation bar to find and add locations of interest.",
      "View Weather Data: Instantly see current weather details on each added location's tile, including temperature, local time, and weather projectDescription.",
      "Tap on a location tile to access detailed forecasts. View hourly forecasts for the upcoming hours and a 5-day forecast with high and low temperatures."
    ],
    "videoURL": "https://youtu.be/gEnF44S22-E",
    "tags": [
      "Swift",
      "UIKit",
      "MVVM"
    ]
  },
  {
    "projectName": "Wonders",
    "repositoryURL": "https://github.com/berkeparildar/Wonders",
    "projectDescription": "Wonders is an iOS app developed using SwiftUI, accompanied by a robust backend server developed with ASP.NET Core. The app serves as a comprehensive guide for users to explore tourist attractions and must-visit places in various countries.",
    "projectFeatures": [
      "Country Selection: Users are presented with a grid of country images and names on the home screen. A search bar allows users to quickly locate a specific country of interest.",
      "Tourist Attractions: Upon selecting a country, users can explore a list of tourist attractions. Each attraction is accompanied by an image, a name, and a categorization tag (e.g., historic place, museum).",
      "Filter and Sort: Users can refine their search by using the search bar to find a specific attraction. Tags enable users to filter attractions based on categories like historic places, museums, etc. Attractions can be sorted alphabetically for ease of navigation.",
      "Attraction Details: Tapping on an attraction provides detailed information. A larger image of the attraction is displayed, along with its current open/closed status. A small map shows the attraction's location using Apple Maps, offering both a standard and a 3D view.",
      "Server Interaction: The app fetches data from the ASP.NET Core server via GET requests. The server provides specific JSON data for countries, as well as images for both countries and attractions. Data is decoded into appropriate models for seamless integration into the app."
    ],
    "projectUsage": [
      "Use the home screen to visually select a country or employ the search bar for quicker access.",
      "Tap on a country to view a list of tourist attractions.",
      "Utilize search, tags, and alphabetical sorting to find specific attractions.",
      "Tap on an attraction to access detailed information, like its current open/closed status, or the location.",
      "Easily go back to select another attraction, explore more destinations, or choose a different country."
    ],
    "videoURL": "https://youtu.be/uxPh-ew53DE",
    "tags": [
      "Swift",
      "SwiftUI",
      "ASP .NET Core"
    ]
  },
  {
    "projectName": "Currency Converter",
    "repositoryURL": "https://github.com/berkeparildar/CurrencyConverter",
    "projectDescription": "Currency Converter is an intuitive iOS app developed using SwiftUI, designed to simplify currency conversions effortlessly. As the name suggests, users can utilize this app to convert a specified amount from one currency to another.",
    "projectFeatures": [
      "User-Friendly Interface: Users can easily tap on the currency icons to select their current currency and the target currency for conversion.",
      "Wide Currency Support: The app provides access to 16 different currencies, offering a broad range of options for users.",
      "Real-time Target Currency Update: The target currency dynamically updates in real-time with each input, allowing users to see instant conversions.",
      "Exchange Rates API Integration: Exchange rates for all available currencies are set with the base currency being USD.",
      "The entered amount is converted to the target currency by considering the latest exchange rates, ensuring accuracy in calculations."
    ],
    "projectUsage": [
      "Launch the App: Open Currency Converter on your iOS device.",
      "Currency Selection: Tap the first currency icon to access available currencies. Select your current currency from the list. Use the second currency icon to choose the target currency.",
      "Tap the first empty text box to input the amount you wish to convert.",
      "The converted amount is displayed in the second text box, providing the equivalent value in the selected target currency."
    ],
    "videoURL": "https://youtu.be/OHwwctYCMlY",
    "tags": [
      "Swift",
      "SwiftUI"
    ]
  }
]